#include<iostream>
using namespace std;

class stack
{
    public:
    int *arr;
    int size;
    int top1;
    int top2;

    stack(int s)
    {
        this->size=s;
        arr=new int[s];
        top1=-1;
        top2=s;
    }
    
    void push1(int data)
    {
        if(top2-top1>1)
        {
            top1++;
            arr[top1]=data;
        }
        else
        cout<<"stack overflow"<<endl;
    }
    void pop1()
    {
        if(top1>=0)
        {
            int x=arr[top1];
            top1--;
            cout<<x<<endl;
        }
        else
        cout<<"-1"<<endl;
    }

        void push2(int data)
    {
        if(top2-top1>1)
        {
            top2--;
            arr[top2]=data;
        }
        else
        cout<<"stack overflow"<<endl;
    }
    void pop2()
    {
        if(top2<size)
        {
            int y=arr[top2];
            top2++;
            cout<<y<<endl;
        }
        else
        cout<<"-1"<<endl;
    }

    int peak1()
    {
        if(top1>=0)
        {
            int a=arr[top1];
            return a;
        }
        else
        return -1;
    }

        int peak2()
    {
        if(top2<size)
        {
            int a=arr[top2];
            return a;
        }
        else
        return -1;
    }

};

int main()
{
    stack st(5);
    st.push1(1);
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.push1(2);
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.push2(3);
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.push2(4);
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.push2(5);
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.push1(6);
    st.push2(7);
    st.pop1();
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.pop2();
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
    st.pop1();
    st.pop2();
    st.pop2();
      cout<<st.peak1()<<endl;
      cout<<st.peak2()<<endl;
}
