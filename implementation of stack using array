#include<iostream>
using namespace std;


class stack{
    public:
    int *arr;
    int top;
    int size;

    stack(int size)
    {
        this->size=size;
        arr=new int[size];
        top=-1;
    }

void push(int element)
{
    if(size-top>1)
    {
        top++;
        arr[top]=element;
    }
    else
    cout<<"stack overflow"<<endl;
}

void pop()
{
    if(top>=0)
    {
        top--;
    }
    else
    cout<<"stack underflow"<<endl;
}

int peak()
{
    if(top>=0)
    return arr[top];
    else
    return -1;
}

bool isempty()
{
    if(top<0)
    return false;
    return true;
}

};

int main()
{
    stack st(5);
    st.push(23);
    int a=st.peak();
    cout<<a<<endl;
    st.push(24);
    int b=st.peak();
    cout<<b<<endl;
    st.push(25);
    int c=st.peak();
    cout<<c<<endl;
    st.push(26);
    int d=st.peak();
    cout<<d<<endl;
    st.push(27);
    int e=st.peak();
    cout<<e<<endl;
    st.push(27);
    st.pop();
    st.pop();
    cout<<st.peak()<<endl;
    if(st.isempty()==true)
    cout<<"stack is not empty"<<endl;
    else
    cout<<"stack is empty"<<endl;
    st.pop();
    st.pop();
    st.pop();
    cout<<st.peak()<<endl;
    st.pop();
    cout<<st.peak()<<endl;
    if(st.isempty()==true)
    cout<<"stack is not empty"<<endl;
    else
    cout<<"stack is empty"<<endl;

}
