#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    Node(int data)
    {
        this->data=data;
        this->next=NULL;
    }
};
void insertattail(Node* &tail,int d)
{
    Node* temp=new Node(d);
    tail->next=temp;
    tail=tail->next;

}
void print(Node* &head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int getlength(Node* &head)
{
    Node* temp=head;
    int count=0;
    while(temp!=NULL)
    {
        count++;
        temp=temp->next;
    }
    return count;
}
int mid(Node* &head)
{
    Node* temp=head;
    int middle=getlength(head)/2;
    //int x=mid;
    while(middle)
    {
       temp=temp->next;
       middle--;
    }
    return temp->data;
}

int midalternate(Node* &head)
{  
      Node* slow=head;
    Node* fast=head->next;
  
    while(fast!=NULL)
    {
        fast=fast->next;
        if(fast!=NULL)
        fast=fast->next;
        slow=slow->next;
    }
    return slow->data;
}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    Node* node1=new Node(arr[0]);
    Node* head=node1;
    Node* tail=node1;
    for(int i=1;i<n;i++)
    {
       insertattail(tail,arr[i]);
    }
    print(head);
    int length=getlength(head);
    cout<<endl;
    cout<<length<<endl;
    int middle=mid(head);
    cout<<middle<<endl;
    int middlealter=midalternate(head);
    cout<<middlealter<<endl;      
}
