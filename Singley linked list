
#include<iostream>
using namespace std;
class node{
   public:
   int data;
   node* next;

   //construct a node
   node(int data){
      this->data=data;
      this->next=NULL;  
   }

   //destructor
   // ~node(){
   //    int value=this->data;
   //    //memory free
   //    if(this->next!=NULL){
   //       delete next;
   //       this->next=NULL;
   //    }
   //    cout<<"memeory is free for node with data "<<value<<endl;
   // }
};

void insertattail(node* &tail,int d)
{
   node* temp=new node(d);
   tail->next=temp;
   tail=tail->next;
}
void insertathead(node* &head,int d)
{
   //create new noder
   node* temp = new node(d);
   temp->next=head;
   head=temp;
}

void insertatanypos(node* &head,node* &tail,int position,int d){

   if(position==1)
   {
      insertathead(head,d);
      return;
   }
   
   node* temp=head;
   int count=1;
   while(count<position-1)
   {
      temp=temp->next;
      count++;
   }
   if(temp->next==NULL)
   {
      insertattail(tail,d);
      return;
   }
   //creating new node for d
   node* nodetoinsert=new node(d);
   nodetoinsert->next=temp->next;
   temp->next=nodetoinsert;
}

void deletenode(int position,node* &head)
{
  if(position==1)
  {
   node* temp=head;
   head=head->next;
   delete temp;
  }
  else{
   node* curr=head;
   node* prev=NULL;

   int count=1;
   while(count < position){
      prev=curr;
      curr=curr->next;
      count++;
   }
   prev->next=curr->next;
   curr->next=NULL;
   delete curr;
  }

}

void print(node* &head)
{
   node* temp=head;
   while(temp!=NULL)
   {
      cout<<temp->data<<" ";
      temp=temp->next;
   }
   cout<<endl;
}
int main(){
   node* node1=new node(10);
   cout<<node1->data<<endl;   //10
   cout<<node1->next<<endl;   //0
   cout<<endl;
   

   node* head=node1;
   print(head);   //10
   insertathead(head,121);   //121 10
   print(head);
   insertathead(head,151);     //151 121 10
   print(head);

   node* tail=node1;
   print(head);     //151 121 10
   insertattail(tail,12);
   print(head);    //151 121 10 12
   insertattail(tail,15);
   print(head);     //151 121 10 12 15
   insertathead(head,1221);   
    print(head);    //1221 151 121 10 12 15
    insertatanypos(head,tail,3,555);
    print(head);    //1221 151 555 121 10 12 15
    

   deletenode(3,head);
   print(head);   //1221 151 121 10 12 15
   deletenode(1,head);
   print(head);    ////151 121 10 12 15

   return 0;
}



