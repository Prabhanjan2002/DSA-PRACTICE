#include<bits/stdc++.h>
using namespace std;

class Deque{
    int *arr;
    int size;
    int front;
    int rear;

    public:
    Deque(int n)
    {
        size=n;
       arr=new int[n];
       front=rear=-1;
    }

    bool isfull()
    {
        if((front==0 && rear==size-1) || (front!=0 && rear==(front-1)%(size-1)) )
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    bool isempty()
    {
        if(front==-1)
        return true;
        else
        return false;
    }


    void pushfront(int data)
    {
       if(isfull())
       {
        cout<<"queue is full "<<endl;
        return ;
       }
       else if(front==-1)  //push the first element in front of queue
       {
        front=rear=0;
        arr[front]=data;
       }
       else if(front==0 && rear!=size-1)
       {
        front=size-1;
        arr[front]=data;
       }
       else
       {
          front=front-1;
          arr[front]=data;
       }
    }

    int popfront()
    {
        if(isempty())
        {
            cout<<"queue is empty"<<endl;
            return -1;
        }
        
        else if(front==rear)
        {
            int value=arr[front];
            arr[front]=-1;
            front=rear=-1;
           return value;
        }
        else if(front==size-1)
        {
            int value=arr[front];
            arr[front]=-1;
            front=0;
           return value;
        }
        else
        {
            int value=arr[front];
            arr[front]=-1;
            front++;
            return value;
        }
    }

    void pushrear(int data)
    {
        if(isfull())
        {
            cout<<"queue is full "<<endl;
             return ;
        }
        else if(front==-1)
        {
            front=rear=0;
            arr[rear]=data;
        }
        else if(rear==size-1 && front!=0)
        {
            rear=0;
            arr[rear]=data;
        }
        else
        {
            rear++;
            arr[rear]=data;
        }
    }

    int poprear()
    {
        if(isempty())
        {
            cout<<"queue is empty"<<endl;
            return -1;
        }
        else if(front==rear)
        {
            int val=arr[rear];
            arr[rear]=-1;
            front=rear=-1;
            return val;
        }
        else if(rear==0)
        {
            int val=arr[rear];
            arr[rear]=-1;
            rear=size-1;
            return val;
        }
        else
        {
            int val=arr[rear];
            arr[rear]=-1;
            rear--;
            return val;
        }
    }
};

int main()
{
    Deque dq(5);
    dq.pushfront(1);
    dq.pushrear(2);
    dq.pushfront(3);
    dq.pushrear(4);
    dq.pushfront(5);
    dq.pushrear(6);   //queue is full
    dq.pushfront(7);   //queue is full


    cout<<dq.popfront()<<endl;  //5
    cout<<dq.poprear()<<endl;   //4
    cout<<dq.popfront()<<endl;  //3
    cout<<dq.poprear()<<endl;   //2
    cout<<dq.popfront()<<endl;   //1
    cout<<dq.poprear()<<endl;   //-1
    cout<<dq.popfront()<<endl;   //-1
    cout<<dq.poprear()<<endl;    //-1
}
