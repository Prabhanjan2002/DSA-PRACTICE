#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    Node(int data)
    {
        this->data=data;
        this->next=NULL;
    }
};
void insertattail(Node* &tail,int d)
{
    Node* temp=new Node(d);
    tail->next=temp;
    tail=tail->next;

}
void print(Node* &head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}

Node* kgropureverse(Node* head,int k)
{
    Node* curr=head;
    Node* prev=NULL;
    Node* forward=NULL;
    int count=0;
    while(curr!=NULL && count<k)
    {
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
        count++;
    }
    if(forward!=NULL)
    head->next=kgropureverse(forward,k);
    return prev;
}

int main()
{
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    Node* node1=new Node(arr[0]);
    Node* head=node1;
    Node* tail=node1;
    for(int i=1;i<n;i++)
    {
       insertattail(tail,arr[i]);
    }
    print(head);
    cout<<endl;    //2 4 5 6 9 1 0
    head=kgropureverse(head,2);
    print(head);    //4 2 6 5 1 9 0

}
